name: Android Build

on:
  push:
    branches: [ playstoreRelease ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name : 'checkout-repository'
        uses: actions/checkout@v3
        with:
          ref: playstoreRelease

      - name: Set Up Java              // 1
        uses: actions/setup-java@v4
        with:
          distribution : 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/automationKey.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=automationKey.jks" >> android/key.properties

      - name: Build appBundle
        run: flutter build appbundle

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/bundle/release/app-release.aab

      - name: Creating service account
        id: createServiceAccount
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Play Store (Internal testing)
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.FlutterAuto.automateApp
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: alpha
          status: completed
